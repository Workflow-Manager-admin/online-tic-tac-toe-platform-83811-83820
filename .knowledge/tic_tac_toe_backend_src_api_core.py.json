{"is_source_file": true, "format": "Python", "description": "This file contains core game logic and API functions for a Tic Tac Toe backend, including a class 'TicTacToeGame' with methods for game play, winner checking, and serialization, as well as utility functions for AI moves and leaderboard stub data.", "external_files": [], "external_methods": [], "published": ["TicTacToeGame", "ai_move", "get_leaderboard_stub"], "classes": [{"name": "TicTacToeGame", "description": "Core game logic for Tic Tac Toe, including move handling, winner detection, draw check, and board serialization."}], "methods": [{"name": "bool make_move(self, row: int, col: int, player: str)", "description": "Attempts to mark the board at specified position for a player; returns True if move is successful.", "scope": "TicTacToeGame", "scopeKind": "class"}, {"name": "Optional[str] check_winner(self)", "description": "Checks all lines to determine if there's a winner; returns 'X', 'O', or None.", "scope": "TicTacToeGame", "scopeKind": "class"}, {"name": "bool is_draw(self)", "description": "Determines if the game is a draw, i.e., the board is full and there is no winner.", "scope": "TicTacToeGame", "scopeKind": "class"}, {"name": "List[List[Optional[str]]] serialize_board(self)", "description": "Returns a copy of the current game board.", "scope": "TicTacToeGame", "scopeKind": "class"}, {"name": "(int,int) ai_move(board: List[List[Optional[str]]], symbol: str)", "description": "Naive AI function that picks the first available empty cell on the board.", "scope": "", "scopeKind": ""}, {"name": "List[dict] get_leaderboard_stub()", "description": "Returns stub data representing leaderboard information for players.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, board: Optional[List[List[Optional[str]]]] = None, player_x: str = \"X\", player_o: str = \"O\")", "scope": "TicTacToeGame", "scopeKind": "class", "description": "unavailable"}], "calls": ["self.check_winner()", "self.board[row][col]", "self.board[i]", "self.board[0][i]", "self.board[1][i]", "self.board[2][i]", "self.board[0][0]", "self.board[1][1]", "self.board[2][2]", "self.board[0][2]", "self.board[1][1]", "self.board[2][0]", "board[i][j]"], "search-terms": ["TicTacToeGame", "ai_move", "get_leaderboard_stub", "core game logic", "check_winner", "serialize_board"], "state": 2, "file_id": 6, "knowledge_revision": 15, "git_revision": "", "revision_history": [{"13": ""}, {"15": ""}], "ctags": [{"_type": "tag", "name": "TicTacToeGame", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-platform-83811-83820/tic_tac_toe_backend/src/api/core.py", "pattern": "/^class TicTacToeGame:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-platform-83811-83820/tic_tac_toe_backend/src/api/core.py", "pattern": "/^    def __init__(self, board: Optional[List[List[Optional[str]]]] = None, player_x: str = \"X\", p/", "language": "Python", "kind": "member", "signature": "(self, board: Optional[List[List[Optional[str]]]] = None, player_x: str = \"X\", player_o: str = \"O\")", "scope": "TicTacToeGame", "scopeKind": "class"}, {"_type": "tag", "name": "ai_move", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-platform-83811-83820/tic_tac_toe_backend/src/api/core.py", "pattern": "/^def ai_move(board: List[List[Optional[str]]], symbol: str) -> (int, int):$/", "language": "Python", "typeref": "typename:(int,int)", "kind": "function", "signature": "(board: List[List[Optional[str]]], symbol: str)"}, {"_type": "tag", "name": "check_winner", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-platform-83811-83820/tic_tac_toe_backend/src/api/core.py", "pattern": "/^    def check_winner(self) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "member", "signature": "(self)", "scope": "TicTacToeGame", "scopeKind": "class"}, {"_type": "tag", "name": "get_leaderboard_stub", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-platform-83811-83820/tic_tac_toe_backend/src/api/core.py", "pattern": "/^def get_leaderboard_stub() -> List[dict]:$/", "language": "Python", "typeref": "typename:List[dict]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "is_draw", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-platform-83811-83820/tic_tac_toe_backend/src/api/core.py", "pattern": "/^    def is_draw(self) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self)", "scope": "TicTacToeGame", "scopeKind": "class"}, {"_type": "tag", "name": "make_move", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-platform-83811-83820/tic_tac_toe_backend/src/api/core.py", "pattern": "/^    def make_move(self, row: int, col: int, player: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, row: int, col: int, player: str)", "scope": "TicTacToeGame", "scopeKind": "class"}, {"_type": "tag", "name": "serialize_board", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-platform-83811-83820/tic_tac_toe_backend/src/api/core.py", "pattern": "/^    def serialize_board(self) -> List[List[Optional[str]]]:$/", "language": "Python", "typeref": "typename:List[List[Optional[str]]]", "kind": "member", "signature": "(self)", "scope": "TicTacToeGame", "scopeKind": "class"}], "hash": "4b0bebd77bebeec536a87a3e68499dda", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/src/api/core.py"}